<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="tops">

	<property file="build.properties"/>

	<property name="lib" value="${home}/code//lib"/>
	<property name="jar.dir" value="${basedir}/jars"/>
	<property name="docbook.dir" value="${home}/code/java/docbook-xsl"/>
	<property name="manual.out" value="${basedir}/docs/manual"/>
	<property name="manual.src" value="${basedir}/docs/manual-src"/>
	<property name="dist.parent.dir" value="${basedir}/distribution"/>
	<property name="production.server" value="balabio"/>
	<property name="test.server" value="akun.dcs.gla.ac.uk"/>
	<property name="dist.dir" value="${dist.parent.dir}/dist"/>
	<property name="tops.site.dir" value="/var/www/html/tops"/>
	<property name="tomcat.dir" value="${home}/tomcat"/>
	<property name="test.dir" value="web"/>
	<property name="j3dlib" value="${home}/code/java/j2re1.4.2/lib/ext"/>
	<property name="thirdpartylib.dir" value="${basedir}/thirdpartylibs"/>
	<property name="mysqljar" value="${thirdpartylib.dir}/mysql.jar"/>
	<property name="pjatoolsjar" value="${thirdpartylib.dir}/pjatools.jar"/>
	<property name="pjajar" value="${thirdpartylib.dir}/pja.jar"/>
	<property name="itextjar" value="${thirdpartylib.dir}/iText.jar"/>
	<property name="utilsjar" value="${lib}/utils/utils.jar"/>
	<property name="coltjar" value="${thirdpartylib.dir}/colt.jar"/>
	<property name="vecmathjar" value="${thirdpartylib.dir}/vecmath.jar"/>
    <property name="commons-io-jar" value="$thirpartylib.dir}/commons-io-2.4.jar"/>
    <property name="commons-fileupload-jar" value="$thirpartylib.dir}/commons-fileupload-1.3.jar"/>

	<property name="alljars" value="${servletjar}:${pjatoolsjar}:${pjajar}:${itextjar}:${utilsjar}:${vecmathjar}:${coltjar}:${commons-io-jar}:${commons-fileupload-jar}"/>
	

    <target name="check-version">
        <fail unless="update.version" message="Set the update.version property like -Dupdate.version=2.4"/>
    </target>

    <target name="setup-string-db-update">
        <fail unless="classification" message="Set the classification property like -Dclassification=CATH"/>

        <!-- I *think* this says "set the property reset.db to false if it hasn't been set to anything..." -->
        <condition property="reset.db" value="false">
            <not>
                <isset property="${reset.db}"/>
            </not>
        </condition>
        <!-- Similar to above -->
        <condition property="update.log.level" value="ALL">
            <not>
                <isset property="${update.log.level}"/>
            </not>
        </condition>
    </target>

    <target name="update-convert-cath" description="call the convert-update target with the cath url" depends="check-version">
        <java classname="tops.db.update.CATHConverter" classpath="${jar.dir}/db-update.jar" fork="true">
            <arg value="${update.version}"/>
            <arg value="${update.cath.url}"/>

            <arg value="${update.scratch.dir}"/>
            <arg value="${topsfile.dir}/cath"/>

            <arg value="${pdbfile.dir}"/>
            <arg value="${pdb.url}"/>
            <arg value="${pdb.has.structure}"/>

            <arg value="${dssp.executable}"/>
            <arg value="${tops.executable}"/>

            <arg value="${home}"/>
        </java>
    </target>

    <target name="update-convert-scop" description="call the convert-update target with the scop url" depends="check-version">
        <java classname="tops.db.update.SCOPConverter" classpath="${jar.dir}/db-update.jar" fork="true">
            <arg value="${update.version}"/>
            <arg value="${update.scop.url}"/>

            <arg value="${update.scratch.dir}"/>
            <arg value="${topsfile.dir}/scop"/>

            <arg value="${pdbfile.dir}"/>
            <arg value="${pdb.url}"/>
            <arg value="${pdb.has.structure}"/>

            <arg value="${dssp.executable}"/>
            <arg value="${tops.executable}"/>
        </java>
    </target>

    <target name="update-string-db" description="put a file of strings into the string db, along with rep info" depends="setup-string-db-update">
        <java classname="tops.db.update.DBUpdater" classpath="${jratjar}:${mysqljar}:${jar.dir}/db-update.jar" fork="true">
            <jvmarg value="-Xmx700m"/>
            <jvmarg value="-Djrat.factory=${jrat.factory}"/>

            <arg value="${classification}"/>

            <arg value="${stringdb.name}"/>
            <arg value="${stringdb.username}"/>
            <arg value="${stringdb.url}"/>
            <arg value="${stringdb.password}"/>

            <arg value="${update.scratch.dir}"/>
            <arg value="${string.file.name}"/>

            <arg value="${classif.dir}"/>
            <arg value="${classif.file.name}"/>

            <arg value="${reset.db}"/>
            <arg value="${update.log.level}"/>
        </java>
    </target>

	<target description="generate the user manual" name="manual">
		<echo message="deleting old manual"/>
		<delete>
			<fileset dir="${manual.out}" includes="*"/>
		</delete>
		<echo message="Generating user manual"/>
		<java classname="com.icl.saxon.StyleSheet" classpath="${lib}/saxon/saxon.jar" dir="${manual.out}" fork="true">
			<arg value="${manual.src}/manual.xml"/>
			<arg value="${docbook.dir}/html/chunk.xsl"/>
		</java>
	</target>

	<target description="move the topsfile archives to the test web directory" name="topsfiles-test">
		<mkdir dir="${test.dir}/topsfiles"/>
		<copy file="data/topsfiles/cath_${cath.version}.topsfiles.tar.gz" todir="${test.dir}/topsfiles"/>
		<gunzip src="${test.dir}/topsfiles/cath_${cath.version}.topsfiles.tar.gz"/>
		<untar src="${test.dir}/topsfiles/cath_${cath.version}.topsfiles.tar" dest="${test.dir}/topsfiles"/>
		<delete file="${test.dir}/topsfiles/cath_${cath.version}.topsfiles.tar"/>
		<copy file="data/topsfiles/scop_${scop.version}.topsfiles.tar.gz" todir="${test.dir}/topsfiles"/>
		<gunzip src="${test.dir}/topsfiles/scop_${scop.version}.topsfiles.tar.gz"/>
		<untar src="${test.dir}/topsfiles/scop_${scop.version}.topsfiles.tar" dest="${test.dir}/topsfiles"/>
		<delete file="${test.dir}/topsfiles/scop_${scop.version}.topsfiles.tar"/>
	</target>

</project>
